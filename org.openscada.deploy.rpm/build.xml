<?xml version="1.0" encoding="UTF-8"?>
<!-- ====================================================================== 
     Feb 25, 2010 11:58:25 AM                                                        

     OpenSCADA Deploy    
     OpenSCADA Deploy Packages
                   
     Jens Reimann                                                                
     ====================================================================== -->
<project name="OpenSCADA Deploy" default="default">
    <description>
            OpenSCADA Deploy Packages
    </description>

	<property name="rpm.base" location="${basedir}/build"/>
	<property name="SOURCES" location="${rpm.base}/SOURCES" />
	<property file="versions.properties"/>
	
	<import file="lib.xml"/>
	
    <!-- ================================= 
          target: default              
         ================================= -->
    <target name="default" depends="dump,download,rpm" description="OpenSCADA Deploy Packages">
    </target>

	<!-- - - - - - - - - - - - - - - - - - 
          target: dump                      
         - - - - - - - - - - - - - - - - - -->
    <target name="dump">
		<echo message="rpm.base = ${rpm.base}"/>
    	<echo message="SOURCES = ${SOURCES}"/>
    </target>

	
	<!-- - - - - - - - - - - - - - - - - - 
          target: clean                      
         - - - - - - - - - - - - - - - - - -->
    <target name="clean" depends="rpm.clean">
		<delete dir="build"/>
    </target>
	
    <!-- - - - - - - - - - - - - - - - - - 
          target: download
         - - - - - - - - - - - - - - - - - -->
    <target name="download" unless="skipDownload">
    	<mkdir dir="${SOURCES}"/>
    	<get usetimestamp="true" src="http://download.openscada.org/external/${version.external.type}/${version.external.id}/org.openscada.external-${version.external.id}-p2repo.zip" dest="${SOURCES}/org.openscada.external-${version.external.id}-p2repo.zip"/>
    		
    	<get usetimestamp="true" src="http://download.openscada.org/deploy/${version.deploy.type}/${version.deploy.id}/p2director/p2director-linux.gtk.x86.zip" dest="${SOURCES}/p2director-linux.gtk.x86.zip"/> 
    	<get usetimestamp="true" src="http://download.openscada.org/deploy/${version.deploy.type}/${version.deploy.id}/p2director/p2director-linux.gtk.x86_64.zip" dest="${SOURCES}/p2director-linux.gtk.x86_64.zip"/>
    </target>
	
	<!-- ================================= 
          target: pack              
         ================================= -->
    <target name="pack" depends="" description="Pack local source">
        <tar destfile="${rpm.base}/SOURCES/org.openscada.p2-${version.deploy.id}.tar.gz" compression="gzip" basedir="${basedir}/source/openscada.p2">
        </tar>
    </target>

	<!-- - - - - - - - - - - - - - - - - - 
          target: copySpec                      
         - - - - - - - - - - - - - - - - - -->
    <target name="copySpec">
    	<copy todir="${rpm.base}/SPECS">
    		<fileset dir="${basedir}/source/specs">
    			<include name="*.spec"/>
    		</fileset>
    	</copy>
    	<copy todir="${rpm.base}/SOURCES">
    		<fileset dir="${basedir}/source/SOURCES">
    		</fileset>
    	</copy>
    </target>

	
	<!-- ================================= 
          target: rpm              
         ================================= -->
    <target name="rpm" depends="rpm.clean,rpm.init,rpm.openscada.p2,rpm.wrap,rpm.p2director" description="Build the RPM">
    </target>

	<!-- - - - - - - - - - - - - - - - - - 
          target: rpm.init                      
         - - - - - - - - - - - - - - - - - -->
    <target name="rpm.init">
		<mkdir dir="${rpm.base}"/>
    	<mkdir dir="${rpm.base}/SOURCES"/>
    	<mkdir dir="${rpm.base}/RPMS"/>
    	<mkdir dir="${rpm.base}/BUILD"/>
    	<mkdir dir="${rpm.base}/SPECS"/>
    	<mkdir dir="${rpm.base}/BUILDROOT"/>
    </target>

	
	<!-- - - - - - - - - - - - - - - - - - 
          target: rpm.openscada.p2                      
         - - - - - - - - - - - - - - - - - -->
    <target name="rpm.openscada.p2" depends="pack,copySpec">
    	<rpm specfile="openscada.p2.spec" topdir="${rpm.base}"/>
    </target>
	
	<!-- - - - - - - - - - - - - - - - - - 
          target: rpm.clean                      
         - - - - - - - - - - - - - - - - - -->
    <target name="rpm.clean">
    	<delete dir="${rpm.base}">
			<include name="**/*.rpm"/>
		</delete>    
    </target>
	
	<!-- - - - - - - - - - - - - - - - - - 
          target: rpm.wrap                      
         - - - - - - - - - - - - - - - - - -->
    <target name="rpm.wrap" depends="copySpec,rpm.init">
    	<wrapP2 name="org.eclipse.platform" version="3.5.2" src="http://d2u376ub0heus3.cloudfront.net/eclipse/downloads/drops/R-3.5.2-201002111343" file="org.eclipse.platform-p2repo-3.5.2.zip"/>
    	<wrapP2 name="org.eclipse.rcp" version="3.5.2" src="http://d2u376ub0heus3.cloudfront.net/eclipse/downloads/drops/R-3.5.2-201002111343" file="org.eclipse.rcp-p2repo-3.5.2.zip"/>
    	
    	<wrapP2 name="org.openscada.external" version="${version.external.id}" src="http://download.openscada.org/external/${version.external.type}/${version.external.id}" file="org.openscada.external-${version.external.id}-p2repo.zip"/>
    	<wrapP2 name="org.openscada.aurora.sdk" version="${version.aurora.id}" src="http://download.openscada.org/aurora/${version.aurora.type}/${version.aurora.id}" file="org.openscada.aurora.sdk-${version.aurora.id}-p2repo.zip"/>
    	<wrapP2 name="org.openscada.oxygen.sdk" version="${version.oxygen.id}" src="http://download.openscada.org/oxygen/${version.oxygen.type}/${version.oxygen.id}" file="org.openscada.oxygen.sdk-${version.oxygen.id}-p2repo.zip"/>
    	<wrapP2 name="org.openscada.utgard.sdk" version="${version.utgard.id}" src="http://download.openscada.org/utgard/${version.utgard.type}/${version.utgard.id}" file="org.openscada.utgard.sdk-${version.utgard.id}-p2repo.zip"/>
    	<wrapP2 name="org.openscada.atlantis.sdk" version="${version.atlantis.id}" src="http://download.openscada.org/atlantis/${version.atlantis.type}/${version.atlantis.id}" file="org.openscada.atlantis.sdk-${version.atlantis.id}-p2repo.zip"/>
    	<wrapP2 name="org.openscada.deploy" version="${version.deploy.id}" src="http://download.openscada.org/deploy/${version.deploy.type}/${version.deploy.id}" file="org.openscada.deploy-${version.deploy.id}-p2repo.zip"/>
    	
    	<wrapP2 name="org.equinox.sdk" version="3.5.2" src="http://d2u376ub0heus3.cloudfront.net/equinox/drops/R-3.5.2-201002111343" file="equinox-SDK-3.5.2.zip"/>
    	
    	<!--
    	we need to pull in ECF from the checked out sources since they do not
    	provide a valid P2 archived repository
    	-->
    	<wrapP2 name="org.eclipse.ecf.sdk" version="3.1.0" src="file:///${basedir}/source/SOURCES" file="org.eclipse.ecf.sdk-3.1.0.v20091012-1618-p2repo.zip"/>
    </target>


	<!-- - - - - - - - - - - - - - - - - - 
          target: rpm.p2director                      
         - - - - - - - - - - - - - - - - - -->
    <target name="rpm.p2director" depends="copySpec">
    	<rpm specfile="p2director.spec" topdir="${rpm.base}"/>
    </target>

	
	<macrodef name="wrapP2">
		<attribute name="name" />
		<attribute name="version" />
		<attribute name="src" />
		<attribute name="file" />
		<sequential>

			<mkdir dir="${rpm.base}/SOURCES"/>
			<get usetimestamp="true" dest="${rpm.base}/SOURCES/@{file}" src="@{src}/@{file}"/>
			
			<mkdir dir="${rpm.base}/SPECS"/>
			
			<copy file="${basedir}/source/specs/p2.tpl.spec" tofile="build/SPECS/@{name}.spec"/>
			<replace file="${rpm.base}/SPECS/@{name}.spec">
				<replacefilter token="___NAME___" value="@{name}"/>
				<replacefilter token="___VERSION___" value="@{version}"/>
				<replacefilter token="___FILE___" value="@{file}"/>
			</replace>
			
			<rpm specfile="@{name}.spec" topdir="${rpm.base}" failOnError="true"/>
		</sequential>
	</macrodef>

</project>
