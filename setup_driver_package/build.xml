<?xml version="1.0" encoding="UTF-8"?>

<!-- ====================================================================== 
     openSCADA Orilla
     ====================================================================== -->

<project name="org.openscada.orilla" default="default" basedir=".">
    <description>
            openSCADA Orilla
    </description>

	<property name="build.root" location="${basedir}"/>
	<property name="source.root" location="${basedir}/.."/>
	
	<property name="builder.profile" value="local"/>
	<import file="global/profile.d/profile.${builder.profile}.ant"/>
	
	<import file="${build.root}/global/lib.xml"/>
	
    <!-- ================================= 
          target: default              
         ================================= -->
    <target name="default" depends="clean,openscada.build.profile.setup,build,deploy">
    </target>
	
	<!-- ================================= 
          target: unpack              
         ================================= -->
    <target name="unpack" depends="clean" description="Unpack">
    	<mkdir dir="unpack"/>
    	<unzip dest="unpack">
    		<fileset dir="${input.dir}/repos">
    			<include name="*.zip"/>
    		</fileset>
			<patternset includes="plugins/*.jar">
				<exclude name="**/*slf4j.log4j*.jar"/>
    		</patternset>
    		<mapper type="flatten"/>
    	</unzip>
    	
    	<!-- unpack schema files -->
    	<mkdir dir="resources/schema"/>
    	<unzip dest="resources/schema">
    		<fileset dir="unpack" includes="*.jar"/>
    		<patternset>
    			<include name="schema/*.xsd"/>
    		</patternset>
    		<globmapper from="schema/*" to="*"/>
    	</unzip>
    </target>

	
	<!-- ================================= 
          target: clean              
         ================================= -->
    <target name="clean">
    	<delete dir="unpack" failonerror="false"/>
		<delete dir="resources/schema" failonerror="false"/>
    	
    	<delete dir="${output.dir}" failonerror="false"/>
    	
    	<!-- local advinst output dir -->
    	<delete dir="output" failonerror="false"/>
        
    </target>
	
	<!-- ================================= 
          target: deploy              
         ================================= -->
    <target name="deploy">
    	<mkdir dir="${output.dir}"/>
    	
        <copy todir="${output.dir}">
        	<fileset dir="output">
        		<include name="*.msi"/>
        	</fileset>
    	</copy>
    	
    	<echo message="version=${version}" output="${output.dir}/version.properties" append="false"/>
    </target>
	
	<!-- - - - - - - - - - - - - - - - - - 
          target: setversion                      
         - - - - - - - - - - - - - - - - - -->
    <target name="setversion">
    	<echo message="Setting version to ${version}"/>

        <exec executable="${advinst.base}/AdvancedInstaller.com" failonerror="true">
    		<arg value="/edit"/>
    		<arg value="driverPackage.aip"/>
    		<arg value="/SetVersion"/>
    		<arg value="${version}"/>
    	</exec>
    </target>
	
	<!-- - - - - - - - - - - - - - - - - - 
          target: setupdateurl                      
         - - - - - - - - - - - - - - - - - -->
    <target name="setupdateurl" if="update.url">
        <exec executable="${advinst.base}/AdvancedInstaller.com" failonerror="true">
    		<arg value="/edit"/>
    		<arg value="driverPackage.aip"/>
    		<arg value="/SetUpdatesUrl"/>
    		<arg value="${update.url}"/>
    	</exec>
    </target>
	
	<!-- ================================= 
          target: build              
         ================================= -->
    <target name="build" depends="unpack,setversion,setupdateurl" description="Build the setup">
    	
    	<exec executable="${advinst.base}/AdvancedInstaller.com" failonerror="true">
    		<arg value="/build"/>
    		<arg value="driverPackage.aip"/>
    	</exec>
    </target>
	
</project>
