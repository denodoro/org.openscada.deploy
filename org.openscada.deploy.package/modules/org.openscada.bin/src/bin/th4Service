#!/usr/bin/perl

# $Id$

$VERSION = '0.05';

use lib $ENV{TH4_HOME} . "/bin";
use strict;

use TH4::JavaApplication;
use Getopt::Long;

my $debug = 0;
my $verbose = 0;
my $user = undef;
my $stop = undef;
my $attach = undef;
my $propertiesFile = undef;

GetOptions(
  "debug!"=>\$debug,
  "verbose!"=>\$verbose,
  "user=s"=>\$user,
  "stop!"=>\$stop,
  "attach!"=>\$attach,
  "properties=s"=>\$propertiesFile,
);
 
die "TH4_HOME is not set" unless $ENV{"TH4_HOME"};

my $app = TH4::JavaApplication->new (
  shift,
  shift
);

$app->debug ( $debug );
$app->verbose ( $verbose );
$app->user ( $user );
$app->stop ( $stop );
$app->attach ( $attach );

$app->classpath ( TH4::Base->classpath () );
$app->appendClasspath ( TH4::Base::home () . "/configuration/log" );
$app->appendClasspath ( TH4::Base::home () . "/configuration/cls" );

$propertiesFile = TH4::Base::home() . "/configuration/" . $app->instanceName () . ".properties";

if ( $propertiesFile )
{
  if ( open FILE, "<$propertiesFile" )
  {
    while ( my $line = <FILE> )
    {
        if ( $line =~ /(.*?)=(.*)/ )
        { 
          $app->addProperty ( $1, $2 );
        }
    }
    close FILE;
  }  
}

sub trim($)
{
  my $string = shift;
  $string =~ s/^\s+//;
  $string =~ s/\s+$//;
  return $string;
}

# replace default java args if available
if ( open FILE, "<" . TH4::Base::home() . "/configuration/" . $app->instanceName () . ".jvm" )
{
  my @args;
  while ( my $line = <FILE> )
  {
    push @args, trim($line);
  }
  $app->javaArgs ( @args );
  close FILE;
}

my $logFile;

# check for a log4j configuration script
$logFile = $app->instanceName () . ".properties";
-r TH4::Base::home () . "/configuration/log/" . $logFile && $app->log4jConfiguration ( $logFile );

# check for a logback configuration script ( common first, then override )
$logFile = TH4::Base::home () . "/configuration/log/logback.xml";
-r $logFile && $app->logbackConfiguration ( $logFile );
$logFile = TH4::Base::home () . "/configuration/log/" . $app->instanceName () . ".logback.xml";
-r $logFile && $app->logbackConfiguration ( $logFile );

$app->setArgs ( @ARGV ) if @ARGV;

$app->execCall ();
